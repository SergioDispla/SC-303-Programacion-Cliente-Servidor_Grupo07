/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaz;
import Gestores.GestorAdministracionProductos;
import static Gestores.GestorAdministracionProductos.conectar;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author sams2
 */
public class InterfazVentaProductos extends javax.swing.JFrame {
    DefaultTableModel tablaCompras = new DefaultTableModel();
    String clienteFinal;
    float subtotal = 0.0f;
    
    /**
     * Creates new form InterfazVentaProductos
     */
       
    public InterfazVentaProductos() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonIngresarProductos = new javax.swing.JButton();
        botonCompletarCompra = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaInfoCliente = new javax.swing.JTable();
        txtCodigoProducto = new javax.swing.JTextField();
        labelCedulaCliente = new javax.swing.JLabel();
        labelCodigoProducto = new javax.swing.JLabel();
        labelTituloVentana = new java.awt.Label();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaListaCompras = new javax.swing.JTable();
        labelInfoCliente = new javax.swing.JLabel();
        labelListaCompras = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelSubtotalCompra = new javax.swing.JLabel();
        labelSubtotalMonto = new javax.swing.JLabel();
        botonBuscarCliente = new javax.swing.JButton();
        txtCedulaCliente = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 204));

        botonIngresarProductos.setText("Ingresar Producto");
        botonIngresarProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIngresarProductosActionPerformed(evt);
            }
        });

        botonCompletarCompra.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        botonCompletarCompra.setText("Completar Compra");
        botonCompletarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCompletarCompraActionPerformed(evt);
            }
        });

        tablaInfoCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cédula", "Nombre", "Correo Electrónico"
            }
        ));
        jScrollPane1.setViewportView(tablaInfoCliente);

        labelCedulaCliente.setText("Cedula Cliente");

        labelCodigoProducto.setText("Codigo Producto");

        labelTituloVentana.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        labelTituloVentana.setText("Venta de Productos");

        tablaListaCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cod. Producto", "Nombre", "Precio"
            }
        ));
        jScrollPane2.setViewportView(tablaListaCompras);

        labelInfoCliente.setText("Informacion Cliente");

        labelListaCompras.setText("Lista Compras");

        labelSubtotalCompra.setText("Subtotal:");

        labelSubtotalMonto.setText("0");

        botonBuscarCliente.setText("Buscar Cliente");
        botonBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(labelCodigoProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                                    .addComponent(labelCedulaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCodigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(51, 51, 51)
                                        .addComponent(botonIngresarProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtCedulaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(66, 66, 66))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botonBuscarCliente)
                                .addGap(164, 164, 164)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelListaCompras)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(labelInfoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addComponent(labelSubtotalMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSubtotalCompra)
                            .addComponent(botonCompletarCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(labelTituloVentana, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(375, 375, 375))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(labelTituloVentana, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(labelInfoCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelCedulaCliente)
                        .addComponent(txtCedulaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(botonBuscarCliente)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCodigoProducto)
                            .addComponent(txtCodigoProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(botonIngresarProductos))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(labelListaCompras)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelSubtotalMonto)
                            .addComponent(labelSubtotalCompra))
                        .addGap(54, 54, 54)
                        .addComponent(botonCompletarCompra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
          
    //Boton para ingresar el codigo de producto a comprar por parte del cliente       
    private void botonIngresarProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIngresarProductosActionPerformed
         //Variable que capturan los valores ingresados en los text fields
        String codProducto = txtCodigoProducto.getText().trim();  
                
        try {
            // Establecer conexion a la base de datos
            Connection conexion = conectar();
            
            // String Consulta SQL para consultar el producto y cargarlo en la tabla
            String consulta = "SELECT codigoProducto,nombre,precio FROM productos where codigoProducto = (?)";
                        
            // Preparar la declaracion SQL
            PreparedStatement declaracion = conexion.prepareStatement(consulta);
            declaracion.setString(1, codProducto);
            
            // Ejecutar la consulta y obtener el resultado
            ResultSet resultado = declaracion.executeQuery();           
            
            //Imprimir los resultados en la tabla
            while (resultado.next()) {
                String cod_Producto = resultado.getString("codigoProducto");
                String nombre_Prod = resultado.getString("nombre");
                float precio_Prod = resultado.getFloat("precio");
                
                //Se crea un array tipo objecto para guardar los resultados
                Object [] resultadoConsulta = {cod_Producto, nombre_Prod, precio_Prod};
                
                //Definimos el contenido de la tabla
                String [] columnasTabla = {"Cod. Producto", "Nombre", "Precio"};
                tablaCompras.setColumnIdentifiers(columnasTabla);
                
                //Cargamos la tabla con el array tipo objeto que contiene los resultados de la consulta SQL
                tablaCompras.addRow(resultadoConsulta);
                tablaListaCompras.setModel(tablaCompras);
                
                //Sumar el precio del producto al subtotal
                subtotal += precio_Prod;
            }
    
            // Actualizar el texto de la etiqueta labelSubtotalMonto para mostrar la cantidad parcial a pagar
            labelSubtotalMonto.setText(String.valueOf(subtotal));
            
        } catch (SQLException e) {
             JOptionPane.showMessageDialog(null, "El cliente no se encuentra registrado " + e.getMessage());
        }          
    }//GEN-LAST:event_botonIngresarProductosActionPerformed

    //Boton para completar la compra
    private void botonCompletarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCompletarCompraActionPerformed
        //Instanciacion de un objecto tipo GestorAdministracionProductos para usar el metodo registrarVenta
        GestorAdministracionProductos completarCompra = new GestorAdministracionProductos();
                
        //productos.registroVentas(cliente01, 11300, TARJETA);
        //productos.registroVentas();

        //completarCompra.registroVentas(cliente, subtotal, rootPane);
        //registroVentas(Cliente cliente, float totalPagado, TipoPago tipoPago)
        
    }//GEN-LAST:event_botonCompletarCompraActionPerformed

    //Boton para buscar el cliente ingresado en la base de datos
    private void botonBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarClienteActionPerformed
        DefaultTableModel tablaClientes = new DefaultTableModel();
        String cedulaCliente = txtCedulaCliente.getText().trim();
        try {
            // Establecer conexión a la base de datos
            Connection conexion = conectar();
            
            // Consulta SQL para consultar datos del cliente
            String consulta = "SELECT cedula,nombre,correoElectronico FROM clientes where cedula = (?)";
              
            // Preparar la declaracion SQL
            PreparedStatement declaracion = conexion.prepareStatement(consulta);
            declaracion.setString(1, cedulaCliente);
            
            // Ejecutar la consulta y obtener el resultado
            ResultSet resultado = declaracion.executeQuery();           
            
            //Condicional que valida si se obtuvieron resultados del SQL query (Stackoverflow solucion)
            if (!resultado.isBeforeFirst()){ 
                JOptionPane.showMessageDialog(null, "[!] El cliente no se encuentra registrado");
            } else {            
                //Imprimir los resultados en la tabla
                while (resultado.next()) {
                    String ced_Cliente = resultado.getString("cedula");
                    String nombre_cliente = resultado.getString("nombre");
                    String correo_Electro = resultado.getString("correoElectronico");  

                    Object [] resultadoConsulta = {ced_Cliente,nombre_cliente, correo_Electro};

                    //Definimos el contenido de la tabla
                    String [] columnasTabla = {"Cedula", "Nombre", "Correo Electronico"};
                    tablaClientes.setColumnIdentifiers(columnasTabla);
                    tablaClientes.addRow(resultadoConsulta);
                    tablaInfoCliente.setModel(tablaClientes);
                    clienteFinal = nombre_cliente;
                }
            }               
        } catch (SQLException e) {
             JOptionPane.showMessageDialog(null, "Error al conectar la base de datos " + e.getMessage());
        }
        
        
    }//GEN-LAST:event_botonBuscarClienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazVentaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazVentaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazVentaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazVentaProductos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new InterfazVentaProductos().setVisible(true);
            }
        });
    }
    
    //Metodo para conectarse a la base de datos
    public static Connection conectar() throws SQLException {
        // Datos de conexión a la base de datos
        String url = "jdbc:mysql://localhost:3306/taller";
        String usuario = "root";
        String contrasena = "root";

        // Establecer la conexion y retornarla
        return DriverManager.getConnection(url, usuario, contrasena);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscarCliente;
    private javax.swing.JButton botonCompletarCompra;
    private javax.swing.JButton botonIngresarProductos;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelCedulaCliente;
    private javax.swing.JLabel labelCodigoProducto;
    private javax.swing.JLabel labelInfoCliente;
    private javax.swing.JLabel labelListaCompras;
    private javax.swing.JLabel labelSubtotalCompra;
    private javax.swing.JLabel labelSubtotalMonto;
    private java.awt.Label labelTituloVentana;
    private javax.swing.JTable tablaInfoCliente;
    private javax.swing.JTable tablaListaCompras;
    private javax.swing.JTextField txtCedulaCliente;
    private javax.swing.JTextField txtCodigoProducto;
    // End of variables declaration//GEN-END:variables
}
